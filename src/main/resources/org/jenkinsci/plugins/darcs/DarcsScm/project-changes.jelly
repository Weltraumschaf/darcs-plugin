<!--
    LICENSE

    "THE BEER-WARE LICENSE" (Revision 42):
    "Sven Strittmatter" <ich@weltraumschaf.de> wrote this file.
    As long as you retain this notice you can do whatever you want with
    this stuff. If we meet some day, and you think this stuff is worth it,
    you can buy me a beer in return.
-->

<!--
  This view is used to render the project change list like /job/<jobname>/changes

  While this default implementation can work with any SCM,
  subclass may provide diffent implementation to present implementation-specific
  information.

  The 'builds' variable contains the collection of AbstractBuild objects
  for which the change should be displayed.
-->
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
         xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
    <j:choose>
        <j:when test="${empty(builds)}">
            ${%No builds.}
        </j:when>
        <j:otherwise>
            <j:set var="hadChanges" value="${false}"/>

            <j:forEach var="build" items="${builds}">
                <j:if test="${build.changeSet.iterator().hasNext()}">
                    <j:set var="hadChanges" value="${true}"/>
                    
                    <h2>
                        <a href="${build.number}/changes">${build.displayName} (
                            <i:formatDate value="${build.timestamp.time}"
                                          type="both"
                                          dateStyle="medium"
                                          timeStyle="medium"/>)</a>
                    </h2>

                    <ol>
                        <j:forEach var="changeset" items="${build.changeSet.iterator()}" varStatus="loop">
                            <li value="${loop.index + 1}">Patch <strong>${changeset.name}</strong> &#8212;
                                <a href="${rootURL}/${changeset.author.url}/">${changeset.author}</a> /
                                <a href="${build.number}/changes#detail${loop.index}">${%detail}</a>
                                <j:set var="changesetLink" value="${browser.getChangeSetLink(changeset)}"/>
                                <j:choose>
                                    <j:when test="${changesetLink!=null}">
                                         / <a title="View changes summary in code browser."
                                            href="${changesetLink}">${browser.descriptor.displayName}</a>
                                    </j:when>
                                </j:choose>
                            </li>
                        </j:forEach>
                    </ol>
                </j:if>
            </j:forEach>

            <j:if test="${!hadChanges}">
                ${%No changes in any of the builds.}
            </j:if>
        </j:otherwise>
    </j:choose>
</j:jelly>