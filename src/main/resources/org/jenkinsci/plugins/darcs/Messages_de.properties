#  LICENSE
#
# "THE BEER-WARE LICENSE" (Revision 43):
# "Sven Strittmatter" <weltraumschaf@googlemail.com> wrote this file.
# As long as you retain this notice you can do whatever you want with
# this stuff. If we meet some day, and you think this stuff is worth it,
# you can buy me a non alcohol-free beer in return.
#
# Copyright (C) 2012 "Sven Strittmatter" <weltraumschaf@googlemail.com>

DarcsScm.gotNullAsRevisionState = [poll] Got <null> as revision state.
DarcsScm.calculateRevisionFromBuild = [poll] Calculate revision from build {0}.
DarcsScm.lastBuild = [poll] Last Build: #{0}
DarcsScm.noPReviousBuild = [poll] No previous build, so forcing an initial build.
DarcsScm.currentRemoteRevisionIsLocalIs = [poll] Current remote revision is {0}. Local revision is {1}.
DarcsScm.doesNotHaveLocalRevisionState = [poll] Does not have a local revision state.
DarcsScm.localRevisionStateIsNotOfTypeDarcs = [poll] local revision state is not of type Darcs.
DarcsScm.localRevisionStateDiffersFromRemote = [poll] Local revision state differs from remote.
DarcsScm.remoteRepoHasLessPatchesThanLocal = [poll] Remote repository has less patches than local: remote({0}) vs. local({1}). Will wipe workspace {2}...
DarcsScm.failedToGetRevisionState = [warning] Failed to get revision state for repository: {0}
DarcsScm.createEmptyChangelog = Creating empty change log.
DarcsScm.failedToGetLogFromRepo = Failed to get log from repository: {0}
DarcsScm.failedToCountPatchesInWorkspace = Failed to count patches in workspace repository: {0}
DarcsScm.pullingRepoFrom = Pulling repository from: {0}
DarcsScm.countOfPatchesPrePullingIs = Count of patches pre pulling is {0}
DarcsScm.failedToPull = Failed to pull: {0}
DarcsScm.countOfPatchesPostPullingIs = Count of patches post pulling is {0}
DarcsScm.gettingRepoFrom = Getting repository from: {0}
DarcsScm.failedToCleanTheWorkspace = Failed to clean the workspace
DarcsScm.failedToGetRepoFrom = Failed to get repository from {0}
